import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;

public class Ex_Functional_Interface {

	public static void main(String[] arg) {
		List<Integer> list=Arrays.asList(12,3,5,6,7,8,4,5);
		
		
		Predicate<Integer> predicate = extracted();
		
		Function<Integer, Integer> mapper = x->x*x;
		
		Consumer<Integer> action = System.out::println;
		
		list.stream()
		.filter(predicate)
		.map(mapper)
		.forEach(action);
		
	
	}

	private static Predicate<Integer> extracted() {
		Predicate<Integer> predicate = x->x%2==0;
		return predicate;
	}
	
}
